<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="628" height="2021" viewBox="0 0 628 2021">
  <rect x="0" y="0" width="628" height="2021" fill="#ffffff" />
  <style>
    .node-shape { fill: #eef0ff; stroke: #3f3f3f; stroke-width: 1px; }
    .node-label { fill: #333; font-family: Arial, sans-serif; font-size: 14px; }
    .edge-path { stroke: #555555; stroke-width: 2px; fill: none; }
    .edge-label-bg { fill: rgba(232,232,232, 0.8); opacity: 0.5; }
    .edge-label-text { fill: #333; font-family: Arial, sans-serif; font-size: 12px; }
    .edge-marker { stroke: #555555; }
    .edge-marker-fill { fill: #555555; }

    /* Basic stroke dash animation used by flowchart link animation presets */
    @keyframes dash { to { stroke-dashoffset: -1000; } }

    /* Cluster (flowchart + sequence blocks) */
    .cluster-bg { fill: #ffffde; }
    .cluster-border { fill: none; stroke: #aaaa33; stroke-width: 1px; }
    .cluster-title-bg { fill: rgba(255,255,255,0.8); }
    .cluster-label-text { fill: #333; font-family: Arial, sans-serif; font-size: 12px; }

    /* Notes */
    .note { fill: #fff5ad; stroke: #aaaa33; stroke-width: 1px; }
    .note-text { fill: #333; font-family: Arial, sans-serif; font-size: 12px; }

    /* Sequence-specific add-ons (safe for flowcharts too) */
    .actor-rect { fill: #eaeaea; stroke: #666; stroke-width: 1.5px; }
    .actor-label { fill: #111; font-family: Arial, sans-serif; font-size: 16px; }
    .lifeline { stroke: #999; stroke-width: 1px; }
    .activation { fill: #f4f4f4; stroke: #666; stroke-width: 1px; }
    .msg-line { stroke: #333; stroke-width: 1.5px; fill: none; }
    .msg-line.dotted { stroke-dasharray: 2 2; }
    .msg-line.thick { stroke-width: 3px; }
    .openhead { fill: none; stroke: #333; stroke-width: 1.5px; }
    .crosshead path { stroke: #333; stroke-width: 1.5px; }
    .msg-label { fill: #333; font-family: Arial, sans-serif; font-size: 12px; dominant-baseline: middle; }
    .msg-label-bg { fill: #ffffff; stroke: #cccccc; stroke-width: 1px; rx: 3; }

    /* State overlays */
    .lane-divider { stroke: #aaaaaa; stroke-width: 1px; stroke-dasharray: 4 3; }
    .end-double { stroke: #3f3f3f; stroke-width: 1px; fill: none; }
  </style>
  <defs>
    <marker id="arrow" viewBox="0 0 11 11" markerWidth="11" markerHeight="11" refX="11" refY="6" orient="auto" markerUnits="userSpaceOnUse">
      <path d="M0,0 L0,11 L11,6 z" fill="#555555" />
    </marker>
    <marker id="circle-marker" viewBox="0 0 9 9" markerWidth="9" markerHeight="9" refX="4.5" refY="4.5" orient="auto" markerUnits="userSpaceOnUse">
      <circle cx="4.5" cy="4.5" r="4.5" fill="#555555" />
    </marker>
    <marker id="cross-marker" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" refX="6" refY="6" orient="auto" markerUnits="userSpaceOnUse">
      <path d="M1.5,1.5 L10.5,10.5 M10.5,1.5 L1.5,10.5" stroke="#555555" stroke-width="2.25" />
    </marker>
  </defs>
  <g class="subgraph-bg"><g class="cluster-bg-layer" transform="translate(21,21)">
  <rect class="cluster-bg" x="0" y="0" width="576.5" height="1952" rx="0"/>
</g></g>
  <g id="A">
    <rect class="node-shape" style="fill:#cde4ff" x="251" y="69" width="145" height="40" rx="0" ry="0" />
    
    <text class="node-label" x="323.5" y="93.9" text-anchor="middle">Execute Command</text>
  </g>
  <g id="B">
    <polygon class="node-shape"  points="323.5,229 389.5,295 323.5,361 257.5,295" />
    
    <text class="node-label" x="323.5" y="299.9" text-anchor="middle">Get stdout</text>
  </g>
  <g id="C">
    <polygon class="node-shape" style="fill:#ffe4b2" points="323.5,481 456.5,614 323.5,747 190.5,614" />
    
    <text class="node-label" x="323.5" y="618.9" text-anchor="middle">Attempt JSON.parse(stdout)</text>
  </g>
  <g id="E">
    <rect class="node-shape" style="fill:#d4edda" x="51" y="1743" width="187" height="40" rx="0" ry="0" />
    
    <text class="node-label" x="144.5" y="1767.9" text-anchor="middle">Output is Parsed JSON</text>
  </g>
  <g id="D">
    <polygon class="node-shape" style="fill:#ffe4b2" points="415.5,887 559.5,1031 415.5,1175 271.5,1031" />
    
    <text class="node-label" x="415.5" y="1035.9" text-anchor="middle">Extract JSON from end of stdout</text>
  </g>
  <g id="F">
    <polygon class="node-shape" style="fill:#ffe4b2" points="323.5,1315 467.5,1459 323.5,1603 179.5,1459" />
    
    <text class="node-label" x="323.5" y="1463.9" text-anchor="middle">Attempt JSON.parse(extracted)</text>
  </g>
  <g id="G">
    <rect class="node-shape" style="fill:#f8d7da" x="387.5" y="1743" width="180" height="40" rx="0" ry="0" />
    
    <text class="node-label" x="477.5" y="1767.9" text-anchor="middle">Output is Raw String</text>
  </g>
  <g id="H">
    <rect class="node-shape"  x="216" y="1903" width="215" height="40" rx="0" ry="0" />
    
    <text class="node-label" x="323.5" y="1927.9" text-anchor="middle">Apply transform_js/liquid</text>
  </g>
  <g><path class="edge-path" d="M323.5,109 L323.5,119 C323.5,131 323.5,213 323.5,219 L323.5,229" stroke-linecap="round" stroke-linejoin="round" />
<path d="M323.5,229 L321,223 L326,223 Z" fill="#555555" /></g>
  <g><path class="edge-path" d="M323.5,361 L323.5,371 C323.5,383 323.5,465 323.5,471 L323.5,481" stroke-linecap="round" stroke-linejoin="round" />
<path d="M323.5,481 L321,475 L326,475 Z" fill="#555555" /></g>
  <g>
    <path class="edge-path" d="M266.5,690 L250.94365081389594,705.5563491861041 C192.37356321839079,758.6666666666666 150.07471264367817,769.6666666666666 139.5,817 C128.92528735632183,864.3333333333334 139.5,959.6666666666666 139.5,1031 C139.5,1102.3333333333333 139.5,1173.6666666666667 139.5,1245 C139.5,1316.3333333333333 139.5,1387.6666666666667 139.5,1459 C139.5,1530.3333333333333 138.85185185185185,1625.6666666666667 139.5,1673 L143.38888888888889,1743" stroke-linecap="round" stroke-linejoin="round" />
    <rect class="edge-label-bg" x="114.5" y="1276.8452413165658" width="50" height="14" rx="3" />
    <text class="edge-label-text" x="139.5" y="1283.8452413165658" text-anchor="middle" dominant-baseline="middle">Success</text>
    <path d="M143.38888888888889,1743 L140.5599178881402,1737.1479129298239 L145.5522196541673,1736.8705628317114 Z" fill="#555555" />
  </g>
  <g>
    <path class="edge-path" d="M334.5,736 L346.65,748.15 C361.22999999999996,762.7299999999999 415.5,870.2 415.5,876.5 L415.5,887" stroke-linecap="round" stroke-linejoin="round" />
    <rect class="edge-label-bg" x="396.5" y="813.9160407441235" width="38" height="14" rx="3" />
    <text class="edge-label-text" x="415.5" y="820.9160407441235" text-anchor="middle" dominant-baseline="middle">Fails</text>
    <path d="M415.5,887 L413,881 L418,881 Z" fill="#555555" />
  </g>
  <g>
    <path class="edge-path" d="M404.5,1164 L392.35,1176.15 C377.77000000000004,1190.7300000000002 323.5,1298.2 323.5,1304.5 L323.5,1315" stroke-linecap="round" stroke-linejoin="round" />
    <rect class="edge-label-bg" x="304.5" y="1242.2124325340494" width="38" height="14" rx="3" />
    <text class="edge-label-text" x="323.5" y="1249.2124325340494" text-anchor="middle" dominant-baseline="middle">Found</text>
    <path d="M323.5,1315 L321,1309 L326,1309 Z" fill="#555555" />
  </g>
  <g>
    <path class="edge-path" d="M426.5,1164 L438.65,1176.15 C482.42211838006233,1186.6666666666667 502.48442367601245,1197.6666666666667 507.5,1245 C512.5155763239875,1292.3333333333333 507.5,1387.6666666666667 507.5,1459 C507.5,1530.3333333333333 511.3888888888889,1625.6666666666667 507.5,1673 L484.1666666666667,1743" stroke-linecap="round" stroke-linejoin="round" />
    <rect class="edge-label-bg" x="476.5" y="1479.6949958395437" width="62" height="14" rx="3" />
    <text class="edge-label-text" x="507.5" y="1486.6949958395437" text-anchor="middle" dominant-baseline="middle">Not Found</text>
    <path d="M484.1666666666667,1743 L483.69232501764145,1736.517330796655 L488.435741507894,1738.098469626739 Z" fill="#555555" />
  </g>
  <g>
    <path class="edge-path" d="M315,1594.5 L303.225,1606.275 C289.095,1620.4050000000002 182.11777777777777,1726.2 175.67777777777778,1732.5 L164.94444444444446,1743" stroke-linecap="round" stroke-linejoin="round" />
    <rect class="edge-label-bg" x="196.45138247365568" y="1680.721473667076" width="50" height="14" rx="3" />
    <text class="edge-label-text" x="221.45138247365568" y="1687.721473667076" text-anchor="middle" dominant-baseline="middle">Success</text>
    <path d="M164.94444444444446,1743 L167.485213209296,1737.0171500032548 L170.98168398661468,1740.5913201311805 Z" fill="#555555" />
  </g>
  <g>
    <path class="edge-path" d="M323.5,1603 L332.8,1613.5 C343.96000000000004,1626.1 439.8822222222222,1726.2 446.3222222222222,1732.5 L457.05555555555554,1743" stroke-linecap="round" stroke-linejoin="round" />
    <rect class="edge-label-bg" x="382.4123020810158" y="1681.566382470559" width="38" height="14" rx="3" />
    <text class="edge-label-text" x="401.4123020810158" y="1688.566382470559" text-anchor="middle" dominant-baseline="middle">Fails</text>
    <path d="M457.05555555555554,1743 L451.01831601338534,1740.5913201311805 L454.514786790704,1737.0171500032548 Z" fill="#555555" />
  </g>
  <g><path class="edge-path" d="M144.5,1783 L144.5,1793 C144.5,1805 249.53501478345606,1889.9430233669077 260.49063423966004,1894.8393896043174 L278.75,1903" stroke-linecap="round" stroke-linejoin="round" />
<path d="M278.75,1903 L272.25211397243766,1902.8342376013377 L274.29226657135837,1898.2693961612529 Z" fill="#555555" /></g>
  <g><path class="edge-path" d="M477.5,1783 L477.5,1793 C477.5,1805 389.71999999999997,1888.6 379.325,1894 L362,1903" stroke-linecap="round" stroke-linejoin="round" />
<path d="M362,1903 L366.17195794545984,1898.015547482289 L368.4769070865978,1902.4525745789797 Z" fill="#555555" /></g>
  <g class="cluster-overlay" transform="translate(21,21)">
<rect class="cluster-border" x="0" y="0" width="576.5" height="1952" rx="0"/>
<rect class="cluster-title-bg" x="6" y="5" width="291" height="18" rx="3"/>
<text class="cluster-label-text" x="151.5" y="18" text-anchor="middle">CommandCheckProvider: Output Processing</text>
</g>
</svg>