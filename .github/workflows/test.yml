name: Test Mermaid Linter

on:
  push:
    branches: [ main, test-fixtures-comparison ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript
      run: npm run build
    
    - name: Run linter tests
      run: |
        echo "Running linter tests on flowchart diagrams..."
        npm test
    
    - name: Test individual valid diagrams
      run: |
        echo "Testing valid diagrams..."
        for file in test-fixtures/flowchart/valid/*.mmd; do
          echo "Testing: $file"
          node out/cli.js "$file" || exit 1
        done
    
    - name: Test individual invalid diagrams
      run: |
        echo "Testing invalid diagrams (should fail)..."
        for file in test-fixtures/flowchart/invalid/*.mmd; do
          echo "Testing: $file"
          if node out/cli.js "$file" 2>/dev/null; then
            echo "ERROR: $file should have failed but passed!"
            exit 1
          else
            echo "âœ“ Correctly detected as invalid"
          fi
        done
    
    - name: Compare with mermaid-cli (optional)
      continue-on-error: true
      run: |
        echo "Comparing with official mermaid-cli..."
        node scripts/compare-linters.js flowchart || echo "Comparison completed with differences"
    
    - name: Summary
      if: always()
      run: |
        echo "## Test Summary"
        echo "- Node version: ${{ matrix.node-version }}"
        echo "- Valid fixtures: $(ls -1 test-fixtures/flowchart/valid/*.mmd | wc -l)"
        echo "- Invalid fixtures: $(ls -1 test-fixtures/flowchart/invalid/*.mmd | wc -l)"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check TypeScript
      run: npx tsc --noEmit || echo "TypeScript check completed"
    
    - name: Check formatting
      continue-on-error: true
      run: |
        if [ -f "package.json" ] && grep -q "\"prettier\"" package.json; then
          npx prettier --check "**/*.{js,ts,json,md}" || echo "Formatting issues found"
        else
          echo "Prettier not configured"
        fi
